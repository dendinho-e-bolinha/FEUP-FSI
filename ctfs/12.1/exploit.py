from Crypto.Util.number import inverse
from binascii import hexlify, unhexlify
from pwn import *

HOST = "ctf-fsi.fe.up.pt"
PORT = 6000

p = 2**512 + 75 # next prime 2**512
q = 2**513 + 159 # next prime 2**513
n = p*q
e = 0x10001 # a constant
d = inverse(e, (p-1)*(q-1)) # a number such that d*e % ((p-1)*(q-1)) = 1

s = remote(HOST, PORT)
enc_flag = s.recvline().strip().decode()

def enc(x):
	int_x = int.from_bytes(x, "big")
	y = pow(int_x,e,n)
	return hexlify(y.to_bytes(256, 'big'))

def dec(y):
	int_y = int.from_bytes(unhexlify(y), "big")
	x = pow(int_y,d,n)
	return x.to_bytes(256, 'big')

y = dec(enc_flag)
print(y.decode())