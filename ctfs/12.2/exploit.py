from Crypto.Util.number import inverse
from binascii import hexlify, unhexlify

n = 29802384007335836114060790946940172263849688074203847205679161119246740969024691447256543750864846273960708438254311566283952628484424015493681621963467820718118574987867439608763479491101507201581057223558989005313208698460317488564288291082719699829753178633499407801126495589784600255076069467634364857018709745459288982060955372620312140134052685549203294828798700414465539743217609556452039466944664983781342587551185679334642222972770876019643835909446132146455764152958176465019970075319062952372134839912555603753959250424342115581031979523075376134933803222122260987279941806379954414425556495125737356327411
e1 = 0x10001 # a constant
e2 = 0x10003 # a constant

enc1 = "d580da4f2ca1f72c630abb40fafd01abc92af8efb030831e2b7215be71134bf50f586e9427815d1cb37ed78136b96a427248e43a5e179c8fb2da33120a3d57d30eab167964d426c9441573f64ea84769228bb3e793008fb2558fd36ef15fa1bf6ca823b79e05b7c68d0afa87aa842791a229cf2ecec75dcf76f730e7177cf52e47167ffaac25087597e928957fdef582daae43bc796b763a3989e67af595eb3af65aa0cd0aaecb4e2cbe8c4642ddc4d7cc014038a312fdb1aef7803cecf606a4e509908ea3cf4a3925422ece49db8169d775e0ff980daa5d8406f67712f964a00dc21b17ca4b931e1a698b989b6717a5bfc7dea913044da9aeba34b454ae5e55"
enc2 = "1f322270dc3dda1212cb1151f54dc345a10ee816faba660d24269a4cfe6a15794dac85601dad124bd5a6880b3c50a690f9e0254bce70524777f4f54a8c5159057cac8e64687cfdc05fb200c3fa52a48507b69a344da7b5518372445ed19b064eda8e572009ee5553e5beaaa566f90b40d55df26e327b8d6c12f6bbdb65b048d587ba861fb6faaff7b2ab091bc9d81dd713a28b482487454e73de99375f8a18a2ebad3ee83f018547137af6e0d3330e8aa9d8b6b3cb1a5d0c4b3009faa5c86875acd6da7d78090c93ecb3f5c26f04d1bc91fc8097182d0b664e022348aebd176acd18978c9145f55f4bf38b41c23cc7b6d86828c62711574f8f08bb9db1e94c56"

def enc(x, e):
	int_x = int.from_bytes(x, "big")
	y = pow(int_x,e,n)
	return hexlify(y.to_bytes(256, 'big'))

# d = inverse(e, (p-1)*(q-1))
# como os N são iguais, os p-1 e q-1 também são iguais
def dec(y, d):
	int_y = int.from_bytes(unhexlify(y), "big")
	x = pow(int_y,d,n)
	return x.to_bytes(256, 'big')

y = dec(enc1, e1)
print(y.decode())

# d1 * e1 = 1 mod (p-1)*(q-1)
# d2 * e2 = 1 mod (p-1)*(q-1)
# d1 * e1 = d2 * e2
# d1 = d2 * e2 * inverse(e1, (p-1)*(q-1))
# d2 = d1 * e1 * inverse(e2, (p-1)*(q-1))

# enc1 = msg1 ** e1 + i * n
# enc2 = msg2 ** e2 + j * n
